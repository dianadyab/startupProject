{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (C) 2019 Michael Kourlas\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar XmlAttribute_1 = __importDefault(require(\"./nodes/XmlAttribute\"));\n\nvar XmlDocument_1 = __importDefault(require(\"./nodes/XmlDocument\"));\n\nvar XmlDtd_1 = __importDefault(require(\"./nodes/XmlDtd\"));\n\nvar XmlElement_1 = __importDefault(require(\"./nodes/XmlElement\"));\n/**\n * Returns a context string for the specified node, for use in error messages.\n *\n * @private\n */\n\n\nfunction getContext(obj) {\n  if (obj instanceof XmlAttribute_1.default) {\n    return getContext(obj.up()) + (\" > attribute \\\"\" + obj.name + \"\\\"\");\n  } else if (obj instanceof XmlDocument_1.default) {\n    return \"in XML document\";\n  } else if (obj instanceof XmlDtd_1.default) {\n    return getContext(obj.up()) + \" > DTD\";\n  } else if (obj instanceof XmlElement_1.default) {\n    return getContext(obj.up()) + (\" > element \\\"\" + obj.name + \"\\\"\");\n  } else {\n    throw new Error(\"Unrecognized object of type \" + Object.prototype.toString.call(obj));\n  }\n}\n\nexports.getContext = getContext;","map":null,"metadata":{},"sourceType":"script"}