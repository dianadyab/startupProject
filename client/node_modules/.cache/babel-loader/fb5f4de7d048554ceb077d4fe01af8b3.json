{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (C) 2016-2019 Michael Kourlas\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar error_1 = require(\"../error\");\n\nvar validate_1 = require(\"../validate\");\n/**\n * Represents a parameter entity reference in a document type definition.\n *\n * A parameter entity reference is structured as follows, where `{entity}`\n * is the name of the entity:\n *\n * ```xml\n * %{entity};\n * ```\n */\n\n\nvar XmlDtdParamEntityRef =\n/** @class */\nfunction () {\n  function XmlDtdParamEntityRef(parent, validation, options) {\n    this._validation = validation;\n    this._parent = parent;\n    this.name = options.name;\n  }\n\n  Object.defineProperty(XmlDtdParamEntityRef.prototype, \"name\", {\n    /**\n     * Gets the name of this parameter entity reference.\n     */\n    get: function get() {\n      return this._name;\n    },\n\n    /**\n     * Sets the name of this parameter entity reference.\n     */\n    set: function set(name) {\n      if (this._validation && !validate_1.validateName(name)) {\n        throw new Error(error_1.getContext(this.up()) + \": parameter entity\" + (\" reference name \\\"\" + name + \"\\\" should not contain\") + \" characters not allowed in XML names\");\n      }\n\n      this._name = name;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Returns an XML string representation of this parameter entity reference.\n   */\n\n  XmlDtdParamEntityRef.prototype.toString = function () {\n    return \"%\" + this._name + \";\";\n  };\n  /**\n   * Returns the parent of this parameter entity reference.\n   */\n\n\n  XmlDtdParamEntityRef.prototype.up = function () {\n    return this._parent;\n  };\n\n  return XmlDtdParamEntityRef;\n}();\n\nexports.default = XmlDtdParamEntityRef;","map":null,"metadata":{},"sourceType":"script"}