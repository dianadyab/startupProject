{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar request = require('request');\n\nvar js2xmlparser = require(\"js2xmlparser\"); //to convert from json to xml\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //response the get request come from the /api/hello route\n      response: '',\n      drug: '',\n      disease: '',\n      type: '',\n      responseToPost: '' // response to submit\n\n    };\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      /*var request=JSON.stringify({\n         drug: this.state.drug,\n           disease: this.state.disease,\n             type: this.state.type,\n         });\n        var xr=js2xmlparser.parse(\"request\", request);\n      \n          const response = await fetch('/api/submit', {\n           method: 'POST',\n            headers: {\n             'Content-Type': 'application/json'\n           },\n            body: JSON.stringify({\n              drug: this.state.drug,\n                disease: this.state.disease,\n                  type: this.state.type,\n              })\n           });\n          const body = await response.text();\n           this.setState({ responseToPost: body });*/\n\n      var r = {\n        drug: _this.state.drug,\n        disease: _this.state.disease,\n        type: _this.state.type\n      };\n      var xr = js2xmlparser.parse(\"request\", r);\n      var options = {\n        method: 'POST',\n        keepAlive: false,\n        url: 'http://127.0.0.1:3000/api/submit',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: \"<disease>diana</disease>\"\n      };\n      request(options, function (error, response, body) {\n        console.log(body);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callApi().then(function (res) {\n        return _this2.setState({\n          response: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n    /*callApi method to interact with our GET Express API route\n    we call this method in componentDidMount and finally set the state to the API response\n    */\n\n  }, {\n    key: \"render\",\n\n    /*handleSubmit = e => {\n        e.preventDefault();\n         //const { post } = this.state;\n        const { drug } = this.state;\n        const { disease } = this.state;\n        const { type } = this.state;\n         const request = {\n          //post,\n          drug,\n          disease,\n          type\n         };\n         axios\n          .post('/api/world', request)\n          .then(() => console.log('data searched'))\n          .catch(err => {\n            console.error(err);\n          });\n      };\n    */\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Post to Server:\")), \"drug\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.drug,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            drug: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), \"disease\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.disease,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            disease: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), \"type\", React.createElement(\"select\", {\n        value: this.state.type,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            type: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"select value\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"2\")), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.state.responseToPost));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\example-create-react-app-express-master\\example-create-react-app-express-master\\client\\src\\App.js"],"names":["React","Component","request","require","js2xmlparser","App","state","response","drug","disease","type","responseToPost","callApi","fetch","json","body","status","Error","message","handleSubmit","e","preventDefault","r","xr","parse","options","method","keepAlive","url","headers","error","console","log","then","res","setState","express","catch","err","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,cAAD,CAA1B,C,CAA2C;;;IAGrCE,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACN;AACAC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,IAAI,EAAC,EAHC;AAINC,MAAAA,OAAO,EAAC,EAJF;AAKNC,MAAAA,IAAI,EAAC,EALC;AAMNC,MAAAA,cAAc,EAAE,EANV,CAMa;;AANb,K;UAiBRC,O;;;;6BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeC,KAAK,CAAC,OAAD,CADpB;;AAAA;AACFN,cAAAA,QADE;AAAA;AAAA,qBAGWA,QAAQ,CAACO,IAAT,EAHX;;AAAA;AAGFC,cAAAA,IAHE;;AAAA,oBAMJR,QAAQ,CAACS,MAAT,KAAoB,GANhB;AAAA;AAAA;AAAA;;AAAA,oBAM2BC,KAAK,CAACF,IAAI,CAACG,OAAN,CANhC;;AAAA;AAAA,+CAQDH,IARC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAcXI,Y,GAAgB,UAAAC,CAAC,EAAG;AAEnBA,MAAAA,CAAC,CAACC,cAAF;AACA;;;;;;;;;;;;;;;;;;;;;AAiCK,UAAIC,CAAC,GAAC;AAEHd,QAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE,IAFd;AAGDC,QAAAA,OAAO,EAAE,MAAKH,KAAL,CAAWG,OAHnB;AAICC,QAAAA,IAAI,EAAE,MAAKJ,KAAL,CAAWI;AAJlB,OAAN;AASA,UAAIa,EAAE,GAACnB,YAAY,CAACoB,KAAb,CAAmB,SAAnB,EAA8BF,CAA9B,CAAP;AAEA,UAAIG,OAAO,GAAG;AACXC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,SAAS,EAAE,KAFA;AAGXC,QAAAA,GAAG,EAAE,kCAHM;AAIXC,QAAAA,OAAO,EAAE;AAEP,0BAAgB;AAFT,SAJE;AASXd,QAAAA,IAAI,EAAC;AATM,OAAd;AAWEb,MAAAA,OAAO,CAACuB,OAAD,EAAU,UAAUK,KAAV,EAAiBvB,QAAjB,EAA2BQ,IAA3B,EAAiC;AACnDgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACF,OAFU,CAAP;AAML,K;;;;;;;wCAtFiB;AAAA;;AACjB,WAAKH,OAAL,GACGqB,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAE5B,UAAAA,QAAQ,EAAE2B,GAAG,CAACE;AAAhB,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIP,OAAO,CAACC,GAAR,CAAYM,GAAZ,CAAJ;AAAA,OAFZ;AAGD;AACH;;;;;;;AAoFE;;;;;;;;;;;;;;;;;;;;6BA8BS;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAM,QAAA,QAAQ,EAAE,KAAKnB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,UAKE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,IAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAE3B,YAAAA,IAAI,EAAEY,CAAC,CAACmB,MAAF,CAASC;AAAjB,WAAd,CAAJ;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,aAYE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWG,OAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAW,CAAC;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAE1B,YAAAA,OAAO,EAAEW,CAAC,CAACmB,MAAF,CAASC;AAApB,WAAd,CAAJ;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,UAmBE;AAAQ,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWI,IAA1B;AAAgC,QAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,iBAAI,MAAI,CAACe,QAAL,CAAc;AAAEzB,YAAAA,IAAI,EAAEU,CAAC,CAACmB,MAAF,CAASC;AAAjB,WAAd,CAAJ;AAAA,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,EAEC;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,EAGC;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHD,CAnBF,EA6BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF,CAHF,EAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKlC,KAAL,CAAWK,cAAjB,CAlCF,CADF;AAuCD;;;;EAzKeV,S;;AA4KlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nvar request = require('request');\n\nvar js2xmlparser = require(\"js2xmlparser\");//to convert from json to xml\n\n\nclass App extends Component {\n  state = {\n    //response the get request come from the /api/hello route\n    response: '',\n    drug:'',\n    disease:'',\n    type:'',\n    responseToPost: '',// response to submit\n  };\n\n componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n/*callApi method to interact with our GET Express API route\nwe call this method in componentDidMount and finally set the state to the API response\n*/\n  callApi = async () => {\n    const response = await fetch('/api/');\n\n    const body = await response.json();\n\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n/*calls our POST Express API route then saves the response to\n state and displays a message to the user: I received your POST request.\n This is what you sent me: [message from input].*/\n\n handleSubmit =  e =>{\n\n  e.preventDefault();\n  /*var request=JSON.stringify({\n     drug: this.state.drug,\n       disease: this.state.disease,\n         type: this.state.type,\n\n    });\n    var xr=js2xmlparser.parse(\"request\", request);\n\n\n\n\n     const response = await fetch('/api/submit', {\n       method: 'POST',\n\n       headers: {\n         'Content-Type': 'application/json'\n       },\n\n       body: JSON.stringify({\n          drug: this.state.drug,\n            disease: this.state.disease,\n              type: this.state.type,\n\n         })\n\n\n     });\n\n     const body = await response.text();\n\n\n     this.setState({ responseToPost: body });*/\n\n       var r={\n\n          drug: this.state.drug,\n            disease: this.state.disease,\n              type: this.state.type,\n\n\n         };\n\n       var xr=js2xmlparser.parse(\"request\", r);\n\n       var options = {\n          method: 'POST',\n          keepAlive: false,\n          url: 'http://127.0.0.1:3000/api/submit',\n          headers: {\n\n            'Content-Type': 'application/x-www-form-urlencoded',\n\n          },\n          body:\"<disease>diana</disease>\"\n        };\n         request(options, function (error, response, body) {\n        console.log(body);\n     });\n\n\n\n   }\n\n\n  /*handleSubmit = e => {\n      e.preventDefault();\n\n      //const { post } = this.state;\n      const { drug } = this.state;\n      const { disease } = this.state;\n      const { type } = this.state;\n\n      const request = {\n        //post,\n        drug,\n        disease,\n        type\n\n      };\n\n      axios\n        .post('/api/world', request)\n        .then(() => console.log('data searched'))\n        .catch(err => {\n          console.error(err);\n        });\n    };\n*/\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n        drug\n          <input\n            type=\"text\"\n            value={this.state.drug}\n            onChange={e => this.setState({ drug: e.target.value })}\n          />\n\n          disease\n          <input\n            type=\"text\"\n            value={this.state.disease}\n            onChange={e => this.setState({ disease: e.target.value })}\n          />\n          type\n\n          <select value={this.state.type} onChange={e => this.setState({ type: e.target.value })}>\n          <option >select value</option>\n           <option value=\"1\">1</option>\n           <option value=\"2\">2</option>\n\n         </select>\n\n\n\n\n          <button type=\"submit\">Submit</button>\n        </form>\n        <pre>{this.state.responseToPost}</pre>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}