{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (C) 2016-2019 Michael Kourlas\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar error_1 = require(\"../error\");\n\nvar validate_1 = require(\"../validate\");\n/**\n * Represents an attribute-list declaration in a document type definition.\n *\n * An attribute-list declaration is structured as follows, where `{text}`\n * is the text of the declaration:\n *\n * ```xml\n * <!ATTLIST {text}>\n * ```\n */\n\n\nvar XmlDtdAttlist =\n/** @class */\nfunction () {\n  function XmlDtdAttlist(parent, validation, options) {\n    this._validation = validation;\n    this._parent = parent;\n    this.charData = options.charData;\n  }\n\n  Object.defineProperty(XmlDtdAttlist.prototype, \"charData\", {\n    /**\n     * Gets the text of this entity declaration.\n     */\n    get: function get() {\n      return this._charData;\n    },\n\n    /**\n     * Sets the text of this entity declaration.\n     */\n    set: function set(charData) {\n      if (this._validation && !validate_1.validateChar(charData)) {\n        throw new Error(error_1.getContext(this.up()) + \": attribute-list\" + (\" declaration \\\"\" + charData + \"\\\" should not contain\") + \" characters not allowed in XML\");\n      }\n\n      this._charData = charData;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Returns an XML string representation of this entity declaration.\n   */\n\n  XmlDtdAttlist.prototype.toString = function () {\n    return \"<!ATTLIST \" + this._charData + \">\";\n  };\n  /**\n   * Returns the parent of this entity declaration.\n   */\n\n\n  XmlDtdAttlist.prototype.up = function () {\n    return this._parent;\n  };\n\n  return XmlDtdAttlist;\n}();\n\nexports.default = XmlDtdAttlist;","map":null,"metadata":{},"sourceType":"script"}