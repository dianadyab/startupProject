{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //var request = require(\"request\");\n\nvar axios = require('axios');\n\nvar js2xmlparser = require(\"js2xmlparser\"); //to convert from json to xml\n//var parseString = require('xml2js').parseString;//to convert from xml to js object\n\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //response the get request come from the /api/hello route\n      response: '',\n      drug: '',\n      disease: '',\n      type: '',\n      responseToPost: '' // response to submit\n\n    };\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleSubmit = function () {\n      var r = JSON.stringify({\n        drug: this.state.drug,\n        disease: this.state.disease,\n        type: this.state.type\n      });\n      var xr = js2xmlparser.parse(\"request\", r);\n      var config = {\n        headers: {\n          'Content-Type': 'text/xml'\n        }\n      };\n      axios.post('/api/submit', xr, config).then(function (res) {\n        console.log(res.body);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callApi().then(function (res) {\n        return _this2.setState({\n          response: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n    /*callApi method to interact with our GET Express API route\n    we call this method in componentDidMount and finally set the state to the API response\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Post to Server:\")), \"drug\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.drug,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            drug: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), \"disease\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.disease,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            disease: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), \"type\", React.createElement(\"select\", {\n        value: this.state.type,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            type: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"select value\"), React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"2\")), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.responseToPost));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\example-create-react-app-express-master\\example-create-react-app-express-master\\client\\src\\App.js"],"names":["React","Component","axios","require","js2xmlparser","App","state","response","drug","disease","type","responseToPost","callApi","fetch","json","body","status","Error","message","handleSubmit","r","JSON","stringify","xr","parse","config","headers","post","then","res","console","log","setState","express","catch","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n //var request = require(\"request\");\n   const axios = require('axios');\nvar js2xmlparser = require(\"js2xmlparser\");//to convert from json to xml\n//var parseString = require('xml2js').parseString;//to convert from xml to js object\n\n\n\nclass App extends Component {\n  state = {\n    //response the get request come from the /api/hello route\n    response: '',\n    drug:'',\n    disease:'',\n    type:'',\n    responseToPost: '',// response to submit\n  };\n\n componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n/*callApi method to interact with our GET Express API route\nwe call this method in componentDidMount and finally set the state to the API response\n*/\n  callApi = async () => {\n    const response = await fetch('/api/');\n\n    const body = await response.json();\n\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n/*calls our POST Express API route then saves the response to\n state and displays a message to the user: I received your POST request.\n This is what you sent me: [message from input].*/\n\n\n\n\n  /*handleSubmit = e => {\n      e.preventDefault();\n\n      //const { post } = this.state;\n      const { drug } = this.state;\n      const { disease } = this.state;\n      const { type } = this.state;\n\n      const request = {\n        //post,\n        drug,\n        disease,\n        type\n\n      };\n\n      axios\n        .post('/api/world', request)\n        .then(() => console.log('data searched'))\n        .catch(err => {\n          console.error(err);\n        });\n    };\n*/\n\n\nhandleSubmit = function() {\n  var r=JSON.stringify({\n    drug: this.state.drug,\n      disease: this.state.disease,\n        type: this.state.type,\n\n   });\n   var xr=js2xmlparser.parse(\"request\", r);\nvar config = {\n headers: {'Content-Type': 'text/xml'}\n};\n axios.post('/api/submit', xr, config).then(res => {\nconsole.log(res.body);\n});\n};\n\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n        drug\n          <input\n            type=\"text\"\n            value={this.state.drug}\n            onChange={e => this.setState({ drug: e.target.value })}\n          />\n\n          disease\n          <input\n            type=\"text\"\n            value={this.state.disease}\n            onChange={e => this.setState({ disease: e.target.value })}\n          />\n          type\n\n          <select value={this.state.type} onChange={e => this.setState({ type: e.target.value })}>\n          <option >select value</option>\n           <option value=\"1\">1</option>\n           <option value=\"2\">2</option>\n\n         </select>\n\n\n\n\n          <button type=\"submit\">Submit</button>\n        </form>\n        <pre>{this.state.responseToPost}</pre>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}