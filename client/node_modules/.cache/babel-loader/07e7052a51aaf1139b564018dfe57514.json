{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\example-create-react-app-express-master\\\\example-create-react-app-express-master\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //response the get request come from the /api/hello route\n      response: '',\n      post: '',\n      responseToPost: '' // response to submit\n\n    };\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/hello');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callApi().then(function (res) {\n        return _this2.setState({\n          response: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n    /*callApi method to interact with our GET Express API route\n    we call this method in componentDidMount and finally set the state to the API response\n    */\n\n  }, {\n    key: \"handleSubmit\",\n\n    /*calls our POST Express API route then saves the response to\n     state and displays a message to the user: I received your POST request.\n     This is what you sent me: [message from input].*/\n\n    /*  handleSubmit = async e => {\n    \n        e.preventDefault();\n    \n        const response = await fetch('/api/world', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ post: this.state.post }),\n        });\n    \n        const body = await response.text();\n    \n    \n        this.setState({ responseToPost: body });\n    \n      };*/\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      fetch('/users/create', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: 'diana'\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return console.log(res);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.state.response), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Post to Server:\")), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.post,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            post: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.responseToPost));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\example-create-react-app-express-master\\example-create-react-app-express-master\\client\\src\\App.js"],"names":["React","Component","App","state","response","post","responseToPost","callApi","fetch","json","body","status","Error","message","then","res","setState","express","catch","err","console","log","e","preventDefault","method","headers","JSON","stringify","handleSubmit","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAIA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACN;AACAC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,cAAc,EAAE,EAJV,CAIa;;AAJb,K;UAeRC,O;;;;6BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACeC,KAAK,CAAC,YAAD,CADpB;;AAAA;AACFJ,cAAAA,QADE;AAAA;AAAA,qBAGWA,QAAQ,CAACK,IAAT,EAHX;;AAAA;AAGFC,cAAAA,IAHE;;AAAA,oBAMJN,QAAQ,CAACO,MAAT,KAAoB,GANhB;AAAA;AAAA;AAAA;;AAAA,oBAM2BC,KAAK,CAACF,IAAI,CAACG,OAAN,CANhC;;AAAA;AAAA,+CAQDH,IARC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCARS;AAAA;;AACjB,WAAKH,OAAL,GACGO,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEZ,UAAAA,QAAQ,EAAEW,GAAG,CAACE;AAAhB,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD;AACH;;;;;;;AAaA;;;;AAGA;;;;;;;;;;;;;;;;;;iCAmBeG,C,EAAE;AACTA,MAAAA,CAAC,CAACC,cAAF;AAGAf,MAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBgB,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFU;AAKnBf,QAAAA,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAe;AAAEtB,UAAAA,IAAI,EAAE;AAAR,SAAf;AALa,OAAlB,CAAL,CAMGS,IANH,CAMQ,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACN,IAAJ,EAAF;AAAA,OANX,EAOKK,IAPL,CAOU,UAAAC,GAAG;AAAA,eAAIK,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAPb;AAUH;;;6BAGM;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKZ,KAAL,CAAWC,QAAf,CAFF,EAGE;AAAM,QAAA,QAAQ,EAAE,KAAKwB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,EAIE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWE,IAFpB;AAGE,QAAA,QAAQ,EAAE,kBAAAiB,CAAC;AAAA,iBAAI,MAAI,CAACN,QAAL,CAAc;AAAEX,YAAAA,IAAI,EAAEiB,CAAC,CAACO,MAAF,CAASC;AAAjB,WAAd,CAAJ;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CAHF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAK3B,KAAL,CAAWG,cAAf,CAdF,CADF;AAmBD;;;;EArFeL,S;;AAwFlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport logo from './logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    //response the get request come from the /api/hello route\n    response: '',\n    post: '',\n    responseToPost: '',// response to submit\n  };\n\n componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n/*callApi method to interact with our GET Express API route\nwe call this method in componentDidMount and finally set the state to the API response\n*/\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n\n    const body = await response.json();\n\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n/*calls our POST Express API route then saves the response to\n state and displays a message to the user: I received your POST request.\n This is what you sent me: [message from input].*/\n/*  handleSubmit = async e => {\n\n    e.preventDefault();\n\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n\n    const body = await response.text();\n\n\n    this.setState({ responseToPost: body });\n\n  };*/\n\n  handleSubmit(e){\n        e.preventDefault();\n\n\n        fetch('/users/create', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ post: 'diana' })\n        }).then(res=>res.json())\n            .then(res => console.log(res));\n\n\n    }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}